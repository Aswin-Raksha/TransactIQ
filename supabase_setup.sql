/*
  # Spend Classification Database Setup

  1. New Tables
    - `classifications`
      - `id` (uuid, primary key) - Unique identifier for each classification
      - `raw_input` (text) - Original transaction text
      - `category` (text) - Classified business category
      - `vendor` (text) - Identified or assigned vendor name
      - `enriched_description` (text) - Human-readable description
      - `created_at` (timestamptz) - Timestamp of classification

  2. Security
    - Enable RLS on `classifications` table
    - Add policy for authenticated users to perform all operations
    - Add policy for anonymous users to read data (for demo purposes)

  3. Performance
    - Add indexes on created_at, category, and vendor for fast queries
    - Support analytics and reporting workloads

  4. Notes
    - This table stores all classified transactions
    - Used for analytics, reports, and historical tracking
    - RLS policies allow demo usage while maintaining security
*/

-- Create classifications table
CREATE TABLE IF NOT EXISTS classifications (
  id uuid PRIMARY KEY DEFAULT gen_random_uuid(),
  raw_input text NOT NULL,
  category text,
  vendor text,
  enriched_description text,
  created_at timestamptz DEFAULT now()
);

-- Enable Row Level Security
ALTER TABLE classifications ENABLE ROW LEVEL SECURITY;

-- Policy: Allow all operations for authenticated users
CREATE POLICY "Allow all operations for authenticated users"
  ON classifications
  FOR ALL
  TO authenticated
  USING (true)
  WITH CHECK (true);

-- Policy: Allow read access for anonymous users (demo purposes)
CREATE POLICY "Allow read for anon users"
  ON classifications
  FOR SELECT
  TO anon
  USING (true);

-- Policy: Allow insert for anonymous users (demo purposes)
-- NOTE: In production, you may want to remove this and require authentication
CREATE POLICY "Allow insert for anon users"
  ON classifications
  FOR INSERT
  TO anon
  WITH CHECK (true);

-- Create indexes for performance
CREATE INDEX IF NOT EXISTS idx_classifications_created_at
  ON classifications(created_at DESC);

CREATE INDEX IF NOT EXISTS idx_classifications_category
  ON classifications(category);

CREATE INDEX IF NOT EXISTS idx_classifications_vendor
  ON classifications(vendor);

CREATE INDEX IF NOT EXISTS idx_classifications_category_vendor
  ON classifications(category, vendor);

-- Create view for analytics (optional)
CREATE OR REPLACE VIEW classification_summary AS
SELECT
  category,
  vendor,
  COUNT(*) as transaction_count,
  MIN(created_at) as first_transaction,
  MAX(created_at) as last_transaction
FROM classifications
GROUP BY category, vendor
ORDER BY transaction_count DESC;

-- Grant access to the view
GRANT SELECT ON classification_summary TO authenticated, anon;

-- Add comment to table
COMMENT ON TABLE classifications IS 'Stores AI-classified transaction data with categories, vendors, and enriched descriptions';

-- Add comments to columns
COMMENT ON COLUMN classifications.raw_input IS 'Original transaction text as provided by user';
COMMENT ON COLUMN classifications.category IS 'Business category assigned by AI (e.g., "Travel > Local Transport")';
COMMENT ON COLUMN classifications.vendor IS 'Vendor name extracted or assigned (e.g., "Uber", "Amazon Web Services")';
COMMENT ON COLUMN classifications.enriched_description IS 'Human-readable description generated by AI';
COMMENT ON COLUMN classifications.created_at IS 'Timestamp when the classification was created';
